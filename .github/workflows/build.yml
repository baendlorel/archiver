name: Rust Build

on:
  push:
    branches: [release]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # 支持 Linux 和 macOS
        rust: [stable]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --verbose

      # 获取项目版本号并设置二进制文件名
      - name: Set binary name
        run: |
          VERSION=$(cargo pkgid | cut -d# -f2 | cut -d@ -f2)
          SYSTEM_NAME=$( [ "${{ matrix.os }}" = "ubuntu-latest" ] && echo "linux" || echo "darwin" )
          BINARY_NAME="arv-${SYSTEM_NAME}-v${VERSION}"
          echo "BINARY_NAME=${BINARY_NAME}" >> $GITHUB_ENV

      # 重命名二进制文件
      - name: Rename binary
        run: |
          mv target/release/arv $GITHUB_WORKSPACE/${{ env.BINARY_NAME }}
        working-directory: ${{ github.workspace }}

      # 上传二进制文件
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}
          path: ${{ env.BINARY_NAME }}

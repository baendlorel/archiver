name: Rust

on:
  push:
    branches: ['release'] # 触发条件：push 到 release 分支

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust (official)
        uses: rust-lang/setup-rust@v1
        with:
          rust-version: stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build in release mode
        run: cargo build --release

      - name: Get crate version from Cargo.toml
        id: version
        run: |
          version=$(grep '^version =' Cargo.toml | head -1 | cut -d '"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set short platform name
        id: set_platform
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "platform_short=linux" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            echo "platform_short=darwin" >> $GITHUB_OUTPUT
          else
            echo "platform_short=unknown" >> $GITHUB_OUTPUT

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: arv-${{ steps.set_platform.outputs.platform_short }}-v${{ steps.version.outputs.version }}
          path: target/release/arv
